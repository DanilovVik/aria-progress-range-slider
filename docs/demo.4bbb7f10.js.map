{"version":3,"sources":["src/helpers.ts","src/index.ts","src/demo.ts"],"names":[],"mappings":";AAAA,aAAA,SAAgB,EAAe,GACzB,IAAA,EAAO,EACP,EAAU,EAIX,GACD,GAAQ,EAAQ,YAAc,EAC9B,EAAU,EAAQ,mBACX,GAEF,OAAA,EAXT,QAAA,YAAA,EAAA,QAAA,eAAA;;ACuhBA,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,QAAA,YAAA,EAvhBA,IAAA,EAAA,QAAA,aAgEM,EAAsC,CAC1C,UAAW,cACX,cAAe,EACf,aAAc,EACd,UAAW,kBACX,UAAU,EACV,OAAO,EACP,eAAgB,SAAC,EAAc,GACzB,OAAA,EAAQ,MACH,EAAM,WAGR,KAAK,MAAM,GAAO,YAE3B,aAAc,SAAC,EAAc,GAEhB,OAAA,EAAK,iBAAmB,EAAQ,IAAG,OAAS,EAAQ,KAEjE,aAAc,EACd,IAAK,IACL,IAAK,EACL,MAAM,EACN,KAAM,GAGF,EAAW,CACf,QAAS,GACT,UAAW,GACX,IAAK,GACL,KAAM,GACN,KAAM,GACN,GAAI,GACJ,MAAO,GACP,KAAM,IAGR,EAAA,WAoBE,SAAA,EAAY,EAAsC,GAAlD,IAAA,EAAA,KAOM,GAZE,KAAA,YAAqB,EACrB,KAAA,aAAsB,EA4GtB,KAAA,iBAAmB,WACrB,EAAK,QAAQ,WAIjB,EAAK,aAAc,EACnB,EAAK,YAAc,EAAA,eAAe,EAAK,SACvC,EAAK,QAAQ,UAAU,IAAQ,EAAK,QAAQ,UAAS,aAG/C,KAAA,iBAAmB,WACzB,EAAK,aAAc,EACnB,EAAK,cAAc,GACnB,EAAK,QAAQ,UAAU,OAAW,EAAK,QAAQ,UAAS,YAGlD,KAAA,gBAAkB,SAAC,GACrB,IAAA,EAAK,QAAQ,SAAb,CAIJ,EAAK,YAAa,EAClB,EAAK,QAAQ,UAAU,IAAQ,EAAK,QAAQ,UAAS,cACrD,EAAK,YAAc,EAAA,eAAe,EAAK,SAEjC,IAAA,EAAQ,EAAK,kBAAkB,GACrC,EAAK,YAAY,GAEb,EAAK,QAAQ,aACf,EAAK,QAAQ,YAAY,EAAK,UAAW,EAAK,WAI1C,KAAA,cAAgB,WAClB,EAAK,aACH,EAAK,QAAQ,WACf,EAAK,QAAQ,UAAU,EAAK,UAAW,EAAK,SAG1C,EAAK,QAAQ,UACf,EAAK,QAAQ,SAAS,EAAK,UAAW,EAAK,UAI/C,EAAK,YAAa,EAClB,EAAK,QAAQ,UAAU,OAAW,EAAK,QAAQ,UAAS,eAMlD,KAAA,gBAAkB,SAAC,GACrB,IAAC,EAAK,YAAe,EAAK,eAAe,EAAK,QAAQ,SAAtD,CAIE,IAAA,EAAQ,EAAK,kBAAkB,GAErC,EAAK,mBAAmB,GAEpB,EAAK,WACP,EAAK,eAAe,GACX,EAAK,aACd,EAAK,cAAc,KAIf,KAAA,gBAAkB,SAAC,GACrB,GAAC,EAAK,aAAc,EAAK,QAAQ,SAAjC,CAIJ,EAAE,iBAEI,IAAA,EAAQ,EAAK,kBAAkB,GAErC,EAAK,eAAe,KAYd,KAAA,cAAgB,SAAC,GA+N3B,IAAA,EA9NQ,IAAA,EAAK,QAAQ,SAAb,CAIE,IAAA,EAAY,EAAK,QAAQ,cAAgB,EAAK,MAC9C,EAAW,EAAK,QAAQ,aAAe,EAAK,MAqB5C,IAXO,EAAA,IACV,EAAS,OAAQ,EAClB,EAAC,EAAS,KAAM,EAChB,EAAC,EAAS,YAAa,EACvB,EAAC,EAAS,SAAU,EACpB,EAAC,EAAS,OAAQ,EAClB,EAAC,EAAS,OAAQ,EAClB,EAAC,EAAS,IAAK,EACf,EAAC,EAAS,OAAQ,EARP,GAWQ,EAAE,SAEnB,GAAgB,iBAAT,EAAmB,CACtB,IAAA,EAAoB,EAAK,eAE/B,EAAK,YAAY,EAAK,YAAY,EAAK,MAAQ,IAE3C,IAAsB,EAAK,WAAa,EAAK,QAAQ,UACvD,EAAK,QAAQ,SAAS,EAAK,UAAW,EAAK,YAjOxC,KAAA,QAD0B,iBAAtB,EACM,SAAS,cAAc,GAEvB,IAGX,KAAK,mBAAmB,aACtB,KAAA,oDAGH,KAAA,QAAO,EAAA,GACP,EACA,GAGA,KAAA,MAAQ,KAAK,QAAQ,IAAM,KAAK,QAAQ,IAExC,KAAA,iBAED,KAAK,QAAQ,UACV,KAAA,UAGH,IAAA,EAAQ,EAER,KAAK,QAAQ,eACf,GAAS,KAAK,QAAQ,aAAe,KAAK,QAAQ,KAAO,KAAK,OAG3D,KAAA,YAAY,GACZ,KAAA,eAIA,KAAA,mBAAmB,GA0X5B,OArXU,EAAA,UAAA,cAAR,SAAsB,EAAoB,GAClC,IAAA,EAAU,SAAS,cAAc,OAKhC,OAJP,EAAQ,UAAY,KAAK,aAAa,GAEtC,EAAc,YAAY,GAEnB,GAGD,EAAA,UAAA,eAAR,WACO,KAAA,aAAe,KAAK,cAAc,QAAS,KAAK,SAChD,KAAA,gBAAkB,KAAK,cAAc,WAAY,KAAK,cACtD,KAAA,aAAe,KAAK,cAAc,QAAS,KAAK,cAChD,KAAA,cAAgB,KAAK,cAAc,SAAU,KAAK,cAClD,KAAA,cAAgB,KAAK,cAAc,SAAU,KAAK,SAEnD,KAAK,QAAQ,iBACV,KAAA,oBAAsB,KAAK,cAAc,cAAe,KAAK,SAC7D,KAAA,oBAAsB,KAAK,cAAc,eAAgB,KAAK,UAGhE,KAAA,QAAQ,UAAU,IAAI,KAAK,QAAQ,WAEnC,KAAA,aAAa,aAAa,WAAY,KACtC,KAAA,aAAa,aAAa,OAAQ,UAClC,KAAA,aAAa,aAAa,gBAAiB,KAE3C,KAAA,aAIA,KAAA,QAAQ,iBAAiB,aAAc,KAAK,iBAEjD,OAAO,iBAAiB,YAAa,KAAK,gBAAiB,CACzD,SAAS,EACT,SAAS,IAEX,OAAO,iBAAiB,WAAY,KAAK,eAIpC,KAAA,QAAQ,iBAAiB,aAAc,KAAK,kBAC5C,KAAA,QAAQ,iBAAiB,aAAc,KAAK,kBAC5C,KAAA,QAAQ,iBAAiB,YAAa,KAAK,iBAEhD,OAAO,iBAAiB,UAAW,KAAK,eACxC,OAAO,iBAAiB,YAAa,KAAK,iBAAiB,GAGtD,KAAA,QAAQ,iBAAiB,UAAW,KAAK,gBAKxC,EAAA,UAAA,aAAR,SAAqB,EAAoB,GACnC,YADmC,IAAA,IAAA,EAAA,MACnC,EACS,KAAK,QAAQ,UAAS,IAAM,EAAW,KAAO,EAGhD,KAAK,QAAQ,UAAS,IAAM,GAoFjC,EAAA,UAAA,eAAR,SAAuB,GACf,IAAA,EAAoB,KAAK,UAC1B,KAAA,YAAY,GAEb,IAAsB,KAAK,WAAa,KAAK,QAAQ,YAClD,KAAA,QAAQ,WAAW,KAAK,UAAW,KAAK,UA4CzC,EAAA,UAAA,kBAAR,SAA0B,GAClB,IACF,EADE,EAAe,KAAK,QAAQ,YAG9B,GAAA,EAAE,SAAgC,IAArB,EAAE,QAAQ,OACzB,EAAI,EAAE,QAAQ,GAAG,MAAQ,KAAK,gBACzB,CAAA,IAAI,EAAE,MAGJ,OAAA,EAFP,EAAI,EAAE,MAAQ,KAAK,YAWd,OANH,EAAI,EACN,EAAI,EACK,EAAI,IACb,EAAI,GAGC,KAAK,YAAY,EAAI,IAGtB,EAAA,UAAA,WAAR,WACO,KAAA,aAAa,aAAa,gBAAiB,KAAK,QAAQ,IAAI,YAC5D,KAAA,aAAa,aAAa,aAAc,KAAK,QAAQ,WAEtD,KAAK,QAAQ,eACV,KAAA,aAAa,aAAa,iBAAkB,KAAK,QAAQ,gBAI1D,EAAA,UAAA,aAAR,WACO,KAAA,aAAa,aAAa,gBAAiB,KAAK,UAAU,YAC1D,KAAA,aAAa,aAAa,iBAAkB,KAAK,QAAQ,aAAa,KAAK,UAAW,KAAK,WAG1F,EAAA,UAAA,WAAR,SAAmB,GACb,OAAA,EAAQ,EACH,EACE,EAAQ,EACV,EAGF,GAGD,EAAA,UAAA,YAAR,SAAoB,GACZ,IAAA,EAAO,KAAK,QAAQ,KAAO,KAAK,MAS/B,OAPH,KAAK,QAAQ,OAEf,GADA,EAAQ,KAAK,MAAM,EAAQ,GAAQ,GACnB,KAAK,MAAQ,KAAK,OAGpC,EAAQ,KAAK,WAAW,IAKlB,EAAA,UAAA,cAAR,SAAsB,EAAc,EAAkB,GAChD,KAAK,QAAQ,iBACf,EAAQ,MAAM,KAAmB,IAAR,EAAW,IACpC,EAAQ,UAAY,KAAK,QAAQ,eAAe,EAAW,KAAK,WAI5D,EAAA,UAAA,mBAAR,SAA2B,GACpB,KAAA,cAAc,EAAO,KAAK,UAAW,KAAK,sBAGzC,EAAA,UAAA,mBAAR,SAA2B,GACnB,IAAA,EAAa,EAAQ,KAAK,MAAQ,KAAK,QAAQ,IAEhD,KAAA,cAAc,EAAO,WAAW,EAAW,QAAQ,IAAK,KAAK,sBAG5D,EAAA,UAAA,YAAR,SAAoB,GAId,GAHC,KAAA,cAAc,MAAM,KAAmB,IAAR,EAAW,IAC1C,KAAA,gBAAgB,MAAM,UAAY,UAAW,EAAK,IAEnD,KAAK,QAAU,QAA0B,IAAV,EAAuB,CAClD,IAAA,EAAoB,KAAK,eAE1B,KAAA,MAAQ,EACR,KAAA,UAAY,KAAK,eAElB,KAAK,YAAc,IAChB,KAAA,eACA,KAAA,mBAAmB,IAGtB,KAAK,YACF,KAAA,cAAc,KAKjB,EAAA,UAAA,cAAR,SAAsB,GACf,KAAA,aAAa,MAAM,UAAY,UAAW,EAAK,KAG9C,EAAA,UAAA,aAAR,WACQ,IAAA,EAAQ,KAAK,MAAQ,KAAK,MAAQ,KAAK,QAAQ,IAE9C,OAAA,WAAW,EAAM,QAAQ,KAI3B,EAAA,UAAA,SAAP,WACS,OAAA,KAAK,WAGP,EAAA,UAAA,SAAP,SAAgB,GACV,KAAK,YAIJ,KAAA,YAAY,KAAK,YAAY,EAAQ,KAAK,SAG1C,EAAA,UAAA,eAAP,SAAsB,GACf,KAAA,cAAc,MAAM,UAAY,UAAW,EAAQ,KAAK,MAAK,KAG7D,EAAA,UAAA,QAAP,WACO,KAAA,QAAQ,UAAW,EACnB,KAAA,QAAQ,UAAU,IAAQ,KAAK,QAAQ,UAAS,cAChD,KAAA,aAAa,aAAa,gBAAiB,QAC3C,KAAA,aAAa,aAAa,WAAY,QACtC,KAAA,aAAa,aAAa,WAAY,OAGtC,EAAA,UAAA,OAAP,WACO,KAAA,QAAQ,UAAW,EACnB,KAAA,QAAQ,UAAU,OAAW,KAAK,QAAQ,UAAS,cACnD,KAAA,aAAa,aAAa,WAAY,MAGtC,EAAA,UAAA,OAAP,WAEO,KAAA,QAAQ,oBAAoB,aAAc,KAAK,iBAEpD,OAAO,oBAAoB,YAAa,KAAK,iBAC7C,OAAO,oBAAoB,WAAY,KAAK,eAIvC,KAAA,QAAQ,oBAAoB,aAAc,KAAK,kBAC/C,KAAA,QAAQ,oBAAoB,aAAc,KAAK,kBAC/C,KAAA,QAAQ,oBAAoB,YAAa,KAAK,iBAEnD,OAAO,oBAAoB,UAAW,KAAK,eAC3C,OAAO,oBAAoB,YAAa,KAAK,iBAGxC,KAAA,QAAQ,oBAAoB,UAAW,KAAK,gBAG5C,EAAA,UAAA,QAAP,WAEO,KAAA,SAGA,KAAA,QAAQ,UAAY,GAGpB,KAAA,QAAU,KACV,KAAA,cAAgB,KAChB,KAAA,aAAe,KACf,KAAA,gBAAkB,KAClB,KAAA,cAAgB,KAChB,KAAA,aAAe,KACf,KAAA,oBAAsB,KACtB,KAAA,oBAAsB,KAEtB,KAAA,QAAO,EAAA,GAAQ,GACf,KAAA,MAAQ,EACR,KAAA,UAAY,EACZ,KAAA,MAAQ,EACR,KAAA,YAAa,EACb,KAAA,aAAc,GAEvB,EAjbA,GAmbA,QAAA,QAAe;;AC5ef,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,QAAA,YAAA,EA3CA,IAAA,EAAA,EAAA,QAAA,YAGA,SAAS,EAAY,GACf,OAAA,EAAQ,GACH,IAAK,EAGP,EAAM,WAGf,SAAS,EAAW,GACd,GAAA,EAAU,GACL,MAAA,MAAO,EAAY,GAGtB,IACA,EAAkB,EAAU,GAEvB,OAAA,EAHK,KAAK,MAAM,EAAU,KAGN,IAAM,EAAY,GAGnD,IAAM,EAAW,IAAI,EAAA,QAAY,aAAc,IAGzC,EAAW,IAAI,EAAA,QAAY,SAAS,cAAc,cAAe,CACrE,OAAO,EACP,IAAK,IACL,MAAM,EACN,eAAgB,SAAC,EAAO,GAGf,MAAA,GAAI,EAFK,KAAK,MAAM,KAI7B,aAAc,SAAC,EAAO,GACT,OAAA,EAAW,KAAK,MAAM,IAAO,OAAS,EAAW,EAAQ,MAEtE,SAAU,SAAA,GAAS,OAAA,QAAQ,IAAI,YAAa,IAC5C,YAAa,SAAA,GAAS,OAAA,QAAQ,IAAI,gBAAiB,IACnD,UAAW,SAAA,GAAS,OAAA,QAAQ,IAAI,cAAe,IAC/C,WAAY,SAAA,GAAS,OAAA,QAAQ,IAAI,eAAgB,MAG7C,EAAa,IAAI,EAAA,QAAY,eAAgB,CACjD,IAAK,EACL,aAAc,IACd,IAAK,GACL,KAAM,GACN,cAAe,GACf,aAAc,EACd,eAAgB,SAAC,EAAO,GACf,OAAA,EAAM,YAEf,SAAU,SAAA,GAAS,OAAA,QAAQ,IAAI,YAAa,IAC5C,YAAa,SAAA,GAAS,OAAA,QAAQ,IAAI,gBAAiB,IACnD,UAAW,SAAA,GAAS,OAAA,QAAQ,IAAI,cAAe,IAC/C,WAAY,SAAA,GAAS,OAAA,QAAQ,IAAI,eAAgB","file":"demo.4bbb7f10.js","sourceRoot":"..","sourcesContent":["export function getElementLeft(el) {\n  let left = 0;\n  let element = el;\n\n  // Loop through the DOM tree\n  // and add it's parent's offset to get page offset\n  do {\n    left += element.offsetLeft || 0;\n    element = element.offsetParent;\n  } while (element);\n\n  return left;\n}\n","import { getElementLeft } from './helpers';\n\n/*\n|                                       | track\n|=========                              | progress\n|         O                             | handle\n|       [ X ]                           | value tooltip\n|---------------------------            | hover\n|                        [ Y ]          | hover value tooltip\n|--------------------                   | buffer\n*/\n\n// https://www.w3.org/TR/wai-aria-practices/examples/slider/slider-1.html\n\ntype TSelectorOrElement = HTMLElement | Element | string;\n\ninterface UIEvent {\n  touches?: { pageX: number; }[];\n  pageX?: number\n  preventDefault():any\n}\n\ninterface IProgressBarOptions {\n  ariaLabel: string\n  ariaLabeledBy?: string,\n  arrowMoveStep: number\n  className: string\n  disabled: boolean\n  float: boolean\n  getTooltipText(value:number, options?:IProgressBarOptions):string\n  getValueText(value:number, options?:IProgressBarOptions):string\n  initialValue: number\n  max: number\n  min: number\n  onChange?(value:number, options?:IProgressBarOptions):any\n  onDragEnd?(value:number, options?:IProgressBarOptions):any\n  onDragMove?(value:number, options?:IProgressBarOptions):any\n  onDragStart?(value:number, options?:IProgressBarOptions):any\n  pageMoveStep: number,\n  snap: boolean\n  step: number\n}\n\ninterface IProgressBarOptionsPartial {\n  ariaLabel?: string\n  ariaLabeledBy?: string,\n  arrowMoveStep?: number\n  className?: string\n  disabled?: boolean\n  float?: boolean\n  getTooltipText?(value:number, options?:IProgressBarOptions):string\n  getValueText?(value:number, options?:IProgressBarOptions):string\n  initialValue?: number\n  max?: number\n  min?: number\n  onChange?(value:number, options?:IProgressBarOptions):any\n  onDragEnd?(value:number, options?:IProgressBarOptions):any\n  onDragMove?(value:number, options?:IProgressBarOptions):any\n  onDragStart?(value:number, options?:IProgressBarOptions):any\n  pageMoveStep?: number,\n  snap?: boolean\n  step?: number\n}\n\nconst DEFAULT_OPTIONS:IProgressBarOptions = {\n  ariaLabel: 'Seek slider',\n  arrowMoveStep: 1,\n  pageMoveStep: 5,\n  className: 'AriaProgressBar',\n  disabled: false,\n  float: false,\n  getTooltipText: (value:number, options:IProgressBarOptions) => {\n    if (options.float) {\n      return value.toString();\n    }\n\n    return Math.round(value).toString();\n  },\n  getValueText: (value:number, options:IProgressBarOptions) => {\n    // TODO think of a more friendly label\n    return `${ value } ranging from ${ options.min } to ${ options.max }`\n  },\n  initialValue: 0,\n  max: 100,\n  min: 0,\n  snap: true,\n  step: 1,\n};\n\nconst keyCodes = {\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n}\n\nclass ProgressBar {\n  // HTML Elements\n  private element:HTMLElement;\n  private handleElement:HTMLElement;\n  private trackElement:HTMLElement;\n  private progressElement:HTMLElement;\n  private bufferElement:HTMLElement;\n  private hoverElement:HTMLElement;\n  private valueTooltipElement:HTMLElement;\n  private hoverTooltipElement:HTMLElement;\n\n  private options:IProgressBarOptions;\n  private value:number;\n  private realValue:number;\n  private range:number;\n  private isDragging:boolean = false;\n  private isMouseOver:boolean = false;\n\n  private elementLeft:number;\n\n  constructor(selectorOrElement:TSelectorOrElement, options:IProgressBarOptionsPartial) {\n    if (typeof selectorOrElement === 'string') {\n      this.element = document.querySelector(selectorOrElement);\n    } else {\n      this.element = selectorOrElement as HTMLElement;\n    }\n\n    if (!(this.element instanceof HTMLElement)) {\n      throw('Given HTML element is not valid or doesn\\'t exist.')\n    }\n\n    this.options = {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    };\n\n    this.range = this.options.max - this.options.min;\n\n    this.createElements();\n\n    if (this.options.disabled) {\n      this.disable();\n    }\n\n    let value = 0;\n\n    if (this.options.initialValue) {\n      value = (this.options.initialValue - this.options.min) / this.range\n    }\n\n    this.updateValue(value);\n    this.setAriaProps();\n\n\n    // For IE only\n    this.updateHoverTooltip(value);\n  }\n\n  // DOM\n\n  private createElement(elementName:string, parentElement:HTMLElement) {\n    const element = document.createElement('div');\n    element.className = this.getClassName(elementName);\n\n    parentElement.appendChild(element);\n\n    return element;\n  }\n\n  private createElements() {\n    this.trackElement = this.createElement('track', this.element);\n    this.progressElement = this.createElement('progress', this.trackElement);\n    this.hoverElement = this.createElement('hover', this.trackElement);\n    this.bufferElement = this.createElement('buffer', this.trackElement);\n    this.handleElement = this.createElement('handle', this.element);\n\n    if (this.options.getTooltipText) {\n      this.valueTooltipElement = this.createElement('mainTooltip', this.element);;\n      this.hoverTooltipElement = this.createElement('hoverTooltip', this.element);\n    }\n\n    this.element.classList.add(this.options.className);\n\n    this.trackElement.setAttribute('tabindex', '0');\n    this.trackElement.setAttribute('role', 'slider');\n    this.trackElement.setAttribute('aria-valuemin', '0');\n\n    this.setOptions();\n\n    // Dragging\n    // Touch events\n    this.element.addEventListener('touchstart', this.handleDragStart);\n\n    window.addEventListener('touchmove', this.handleTouchMove, {\n      capture: false,\n      passive: false,\n    });\n    window.addEventListener('touchend', this.handleDragEnd);\n\n    // Dragging and hover\n    // Mouse events\n    this.element.addEventListener('mouseenter', this.handleMouseEnter);\n    this.element.addEventListener('mouseleave', this.handleMouseLeave);\n    this.element.addEventListener('mousedown', this.handleDragStart);\n\n    window.addEventListener('mouseup', this.handleDragEnd);\n    window.addEventListener('mousemove', this.handleMouseMove, false);\n\n    // Keyboard events\n    this.element.addEventListener('keydown', this.handleKeyDown);\n\n    // TODO decide if mouse wheel support should be added\n  }\n\n  private getClassName(elementName:string, modifier:string = null) {\n    if (modifier) {\n      return `${ this.options.className }-${ elementName }--${ modifier }`;\n    }\n\n    return `${ this.options.className }-${ elementName }`;\n  }\n\n  // Event handlers\n\n  private handleMouseEnter = () => {\n    if (this.options.disabled) {\n      return;\n    }\n\n    this.isMouseOver = true;\n    this.elementLeft = getElementLeft(this.element);\n    this.element.classList.add(`${ this.options.className }--hover`);\n  }\n\n  private handleMouseLeave = () => {\n    this.isMouseOver = false;\n    this.setHoverScale(0);\n    this.element.classList.remove(`${ this.options.className }--hover`);\n  }\n\n  private handleDragStart = (e:UIEvent) => {\n    if (this.options.disabled) {\n      return;\n    }\n\n    this.isDragging = true;\n    this.element.classList.add(`${ this.options.className }--dragging`);\n    this.elementLeft = getElementLeft(this.element);\n\n    const value = this.getValueFromEvent(e);\n    this.updateValue(value);\n\n    if (this.options.onDragStart) {\n      this.options.onDragStart(this.realValue, this.options);\n    }\n  }\n\n  private handleDragEnd = () => {\n    if (this.isDragging) {\n      if (this.options.onDragEnd) {\n        this.options.onDragEnd(this.realValue, this.options);\n      }\n\n      if (this.options.onChange) {\n        this.options.onChange(this.realValue, this.options);\n      }\n    }\n\n    this.isDragging = false;\n    this.element.classList.remove(`${ this.options.className }--dragging`);\n\n    // TODO if need this for  IE only\n    // this.updateHoverTooltip(this.value);\n  }\n\n  private handleMouseMove = (e:UIEvent) => {\n    if (!this.isDragging && !this.isMouseOver || this.options.disabled) {\n      return;\n    }\n\n    const value = this.getValueFromEvent(e);\n\n    this.updateHoverTooltip(value);\n\n    if (this.isDragging) {\n      this.handleDragMove(value);\n    } else if (this.isMouseOver) {\n      this.setHoverScale(value);\n    }\n  }\n\n  private handleTouchMove = (e:UIEvent) => {\n    if (!this.isDragging || this.options.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const value = this.getValueFromEvent(e);\n\n    this.handleDragMove(value);\n  }\n\n  private handleDragMove(value:number) {\n    const previousRealValue = this.realValue;\n    this.updateValue(value);\n\n    if (previousRealValue !== this.realValue && this.options.onDragMove) {\n      this.options.onDragMove(this.realValue, this.options);\n    }\n  }\n\n  private handleKeyDown = (e:KeyboardEvent) => {\n    if (this.options.disabled) {\n      return;\n    }\n\n    const stepArrow = this.options.arrowMoveStep / this.range;\n    const stepPage = this.options.pageMoveStep / this.range;\n\n    /*\n      Up and Right arrows increase slider value for \"arrowMoveStep\" (default 1)\n      Down and Left arrows decrease slider value for \"arrowMoveStep\" (default 1)\n      Page Up\tincreases slider value for \"pageMoveStep\" (default 10)\n      Page Down\tdecreases slider value for \"pageMoveStep\" (default 10)\n      Home sets slider to its minimum value.\n      End\tsets slider to its maximum value.\n    */\n    const stepMap = {\n      [keyCodes.HOME]: -1,\n      [keyCodes.END]: 1,\n      [keyCodes.PAGE_DOWN]: -stepPage,\n      [keyCodes.PAGE_UP]: stepPage,\n      [keyCodes.DOWN]: -stepArrow,\n      [keyCodes.LEFT]: -stepArrow,\n      [keyCodes.UP]: stepArrow,\n      [keyCodes.RIGHT]: stepArrow,\n    }\n\n    const step = stepMap[e.keyCode];\n\n    if (typeof step === 'number') {\n      const previousRealValue = this.getRealValue();\n\n      this.updateValue(this.includeStep(this.value + step));\n\n      if (previousRealValue !== this.realValue && this.options.onChange) { // TODO\n        this.options.onChange(this.realValue, this.options);\n      }\n    }\n  }\n\n  private getValueFromEvent(e:UIEvent) {\n    const elementWidth = this.element.offsetWidth;\n    let x;\n\n    if (e.touches && e.touches.length === 1) {\n      x = e.touches[0].pageX - this.elementLeft;\n    } else if (e.pageX) {\n      x = e.pageX - this.elementLeft;\n    } else {\n      return 0;\n    }\n\n    if (x < 0) {\n      x = 0;\n    } else if (x > elementWidth) {\n      x = elementWidth;\n    }\n\n    return this.includeStep(x / elementWidth);\n  }\n\n  private setOptions() {\n    this.trackElement.setAttribute('aria-valuemax', this.options.max.toString());\n    this.trackElement.setAttribute('aria-label', this.options.ariaLabel);\n\n    if (this.options.ariaLabeledBy) {\n      this.trackElement.setAttribute('aria-labeledby', this.options.ariaLabeledBy);\n    }\n  }\n\n  private setAriaProps() {\n    this.trackElement.setAttribute('aria-valuenow', this.realValue.toString());\n    this.trackElement.setAttribute('aria-valuetext', this.options.getValueText(this.realValue, this.options))\n  }\n\n  private limitValue(value:number) {\n    if (value < 0) {\n      return 0;\n    } else if (value > 1) {\n      return 1;\n    }\n\n    return value;\n  }\n\n  private includeStep(value:number) {\n    const step = this.options.step / this.range;\n\n    if (this.options.snap) {\n      value = Math.round(value / step) * step;\n      value = value * this.range / this.range;\n    }\n\n    value = this.limitValue(value);\n\n    return value;\n  }\n\n  private updateTooltip(value:number, realValue:number, element:HTMLElement) {\n    if (this.options.getTooltipText) {\n      element.style.left = `${ value * 100 }%`;\n      element.innerHTML = this.options.getTooltipText(realValue, this.options);\n    }\n  }\n\n  private updateValueTooltip(value:number) {\n    this.updateTooltip(value, this.realValue, this.valueTooltipElement);\n  }\n\n  private updateHoverTooltip(value:number) {\n    const hoverValue = value * this.range + this.options.min;\n\n    this.updateTooltip(value, parseFloat(hoverValue.toFixed(4)), this.hoverTooltipElement);\n  }\n\n  private updateValue(value:number) {\n    this.handleElement.style.left = `${ value * 100 }%`;\n    this.progressElement.style.transform = `scaleX(${ value })`;\n\n    if (this.value !== value || typeof value === 'undefined') {\n      const previousRealValue = this.getRealValue();\n\n      this.value = value;\n      this.realValue = this.getRealValue();\n\n      if (this.realValue !== previousRealValue) {\n        this.setAriaProps();\n        this.updateValueTooltip(value);\n      }\n\n      if (this.isDragging) {\n        this.setHoverScale(0);\n      }\n    }\n  }\n\n  private setHoverScale(value:number) {\n    this.hoverElement.style.transform = `scaleX(${ value })`;\n  }\n\n  private getRealValue() {\n    const value = this.value * this.range + this.options.min;\n\n    return parseFloat(value.toFixed(4));\n  }\n\n  // Public\n  public getValue() {\n    return this.realValue;\n  }\n\n  public setValue(value:number) {\n    if (this.isDragging) {\n      return;\n    }\n\n    this.updateValue(this.includeStep(value / this.range));\n  }\n\n  public setBufferValue(value:number) {\n    this.bufferElement.style.transform = `scaleX(${ value / this.range })`;\n  }\n\n  public disable() {\n    this.options.disabled = true;\n    this.element.classList.add(`${ this.options.className }--disabled`);\n    this.trackElement.setAttribute('aria-disabled', 'true');\n    this.trackElement.setAttribute('disabled', 'true');\n    this.trackElement.setAttribute('tabindex', '-1');\n  }\n\n  public enable() {\n    this.options.disabled = false;\n    this.element.classList.remove(`${ this.options.className }--disabled`);\n    this.trackElement.setAttribute('tabindex', '0');\n  }\n\n  public unbind() {\n    // Touch events\n    this.element.removeEventListener('touchstart', this.handleDragStart);\n\n    window.removeEventListener('touchmove', this.handleTouchMove);\n    window.removeEventListener('touchend', this.handleDragEnd);\n\n    // Dragging and hover\n    // Mouse events\n    this.element.removeEventListener('mouseenter', this.handleMouseEnter);\n    this.element.removeEventListener('mouseleave', this.handleMouseLeave);\n    this.element.removeEventListener('mousedown', this.handleDragStart);\n\n    window.removeEventListener('mouseup', this.handleDragEnd);\n    window.removeEventListener('mousemove', this.handleMouseMove);\n\n    // Keyboard events\n    this.element.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public destroy() {\n    // Unbind everything\n    this.unbind();\n\n    // Empty element\n    this.element.innerHTML = '';\n\n    // Reset elements\n    this.element = null;\n    this.handleElement = null;\n    this.trackElement = null;\n    this.progressElement = null;\n    this.bufferElement = null;\n    this.hoverElement = null;\n    this.valueTooltipElement = null;\n    this.hoverTooltipElement = null;\n\n    this.options = { ...DEFAULT_OPTIONS };\n    this.value = 0;\n    this.realValue = 0;\n    this.range = 0;\n    this.isDragging = false;\n    this.isMouseOver = false;\n  }\n}\n\nexport default ProgressBar;\n\n","import ProgressBar from './index';\n////////////// DEMO\n\nfunction addTimeZero(value:number):string {\n  if (value < 10) {\n    return `0${ value }`\n  }\n\n  return value.toString();\n}\n\nfunction formatTime(seconds:number):string {\n  if (seconds < 60) {\n    return `00:${ addTimeZero(seconds) }`\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  const leftoverSeconds = seconds % 60;\n\n  return `${ addTimeZero(minutes) }:${ addTimeZero(leftoverSeconds) }`\n}\n\nconst trackOne = new ProgressBar('#track-one', {\n});\n\nconst trackTwo = new ProgressBar(document.querySelector('#track-two'), {\n  float: true,\n  max: 300,\n  snap: false,\n  getTooltipText: (value, options) => {\n    const seconds = Math.round(value);\n\n    return `${ formatTime(seconds) }`\n  },\n  getValueText: (value, options) => {\n    return `${ formatTime(Math.round(value)) } of ${ formatTime(options.max) }`\n  },\n  onChange: value => console.log('on change', value),\n  onDragStart: value => console.log('on drag start', value),\n  onDragEnd: value => console.log('on drag end', value),\n  onDragMove: value => console.log('on drag move', value),\n});\n\nconst trackThree = new ProgressBar('#track-three', {\n  min: 5,\n  initialValue: 5.5,\n  max: 10,\n  step: 0.1,\n  arrowMoveStep: 0.1,\n  pageMoveStep: 1,\n  getTooltipText: (value, options) => {\n    return value.toString();\n  },\n  onChange: value => console.log('on change', value),\n  onDragStart: value => console.log('on drag start', value),\n  onDragEnd: value => console.log('on drag end', value),\n  onDragMove: value => console.log('on drag move', value),\n});\n"]}